<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.past.dao.EvaluatesDAO">


  <resultMap id="BaseResultMap" type="com.past.domain.entity.Evaluates">
    <!--@mbg.generated-->
    <!--@Table evaluates-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="day" jdbcType="DATE" property="day" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operator_ip" jdbcType="VARCHAR" property="operatorIp" />
  </resultMap>


  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, content, `day`, goods_id, `level`, `status`, create_time, update_time, 
    `operator`, operator_ip
  </sql>


  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from evaluates
    where id = #{id,jdbcType=BIGINT}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from evaluates
    where id = #{id,jdbcType=BIGINT}
  </delete>


  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.past.domain.entity.Evaluates" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into evaluates (user_id, content, `day`, 
      goods_id, `level`, `status`, 
      create_time, update_time, `operator`, 
      operator_ip)
    values (#{userId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{day,jdbcType=DATE}, 
      #{goodsId,jdbcType=BIGINT}, #{level,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, 
      #{operatorIp,jdbcType=VARCHAR})
  </insert>


  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.past.domain.entity.Evaluates" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into evaluates
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="day != null">
        `day`,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="operatorIp != null">
        operator_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="day != null">
        #{day,jdbcType=DATE},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorIp != null">
        #{operatorIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.past.domain.entity.Evaluates">
    <!--@mbg.generated-->
    update evaluates
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="day != null">
        `day` = #{day,jdbcType=DATE},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorIp != null">
        operator_ip = #{operatorIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.past.domain.entity.Evaluates">
    <!--@mbg.generated-->
    update evaluates
    set user_id = #{userId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      `day` = #{day,jdbcType=DATE},
      goods_id = #{goodsId,jdbcType=BIGINT},
      `level` = #{level,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `operator` = #{operator,jdbcType=VARCHAR},
      operator_ip = #{operatorIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update evaluates
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.content,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`day` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.day,jdbcType=DATE}
        </foreach>
      </trim>
      <trim prefix="goods_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`operator` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.operator,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="operator_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.operatorIp,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>


  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update evaluates
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.content != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.content,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`day` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.day != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.day,jdbcType=DATE}
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.level != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="`operator` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.operator != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.operator,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="operator_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.operatorIp != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.operatorIp,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>


  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into evaluates
    (user_id, content, `day`, goods_id, `level`, `status`, create_time, update_time, 
      `operator`, operator_ip)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=BIGINT}, #{item.content,jdbcType=VARCHAR}, #{item.day,jdbcType=DATE}, 
        #{item.goodsId,jdbcType=BIGINT}, #{item.level,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.operator,jdbcType=VARCHAR}, 
        #{item.operatorIp,jdbcType=VARCHAR})
    </foreach>
  </insert>


  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from evaluates
  </select>


  <select id="selectByUserId" parameterType="long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from evaluates
    where user_id = #{userId,jdbcType=BIGINT}
  </select>


  <select id="selectByGoodsId" parameterType="long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from evaluates
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>


  <select id="selectByContentContaining" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from evaluates where 1 = 1
    <if test="pageRequest.query!= null">
        <if test="pageRequest.query.content != null &amp;&amp; pageRequest.query.content != ''">
            and content like concat('%',#{pageRequest.query.content,jdbcType=VARCHAR},'%')
        </if>
    </if>
  </select>


</mapper>